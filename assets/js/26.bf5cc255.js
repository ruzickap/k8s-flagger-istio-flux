(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{325:function(s,t,a){"use strict";a.r(t);var e=a(8),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"install-tekton-and-build-pipelines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-tekton-and-build-pipelines"}},[s._v("#")]),s._v(" Install Tekton and build pipelines")]),s._v(" "),t("p",[s._v("Create registry secret for accessing Azure Container Registry:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl create secret docker-registry docker-config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-server"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pruzickak8smyexampledev.azurecr.io"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-username"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ARM_CLIENT_ID}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-password"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ARM_CLIENT_SECRET}")]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("Install Tekton with Dashboard:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("envsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton.yaml           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton.yaml\nenvsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-dashboard.yaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-dashboard.yaml\nenvsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-services.yaml  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-services.yaml\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Tekton"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent errors like: Error: git repository git@github.com:ruzickap/k8s-flux-repository is not ready to sync (status: cloned)")]),s._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),t("p",[s._v("Prepare Tekton pipelines:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("envsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-pipelineresource.yaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-pipelineresource.yaml\nenvsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-task-pipeline.yaml    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-task-pipeline.yaml\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add pipelines and pipelineresources"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),t("p",[s._v("Initiate "),t("code",[s._v("PipelineRun")]),s._v(" which builds container image form git repository:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("envsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-pipelinerun.yaml      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-pipelinerun.yaml\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add pipeline and initiate build process"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),t("p",[s._v("Check if the build of docker image was completed:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--timeout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("30m "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--for")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("condition"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Succeeded pipelineruns/podinfo-build-docker-image-from-git-pipelinerun\nkubectl get pipelineruns podinfo-build-docker-image-from-git-pipelinerun\n")])])]),t("p",[s._v("Output:")]),s._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("NAME                                              SUCCEEDED   REASON      STARTTIME   COMPLETIONTIME\npodinfo-build-docker-image-from-git-pipelinerun   True        Succeeded   7m48s       2m30s\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);